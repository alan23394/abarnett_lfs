#!/bin/bash

# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    chroot-compile                                     :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: marvin <marvin@42.fr>                      +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/04/10 06:09:47 by marvin            #+#    #+#              #
#    Updated: 2019/04/10 06:09:47 by marvin           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# This function takes five parameters:
#	the name of the package
#	the filename of the tarball
#   a function to config/make/make install
# It will extract the archive into a build directory, and make a log file for
# the package name. Then it executes the build function. It prints info about
# the current stage. It will remove the build directory after running the
# function, so be sure to include the make install part.
# It logs all output from the stages in a log file located in the LOG_DIR
# directory.

# Directory where packages are stored/compiled by default
SOURCE_DIR="/sources"

# Directory where builds will take place
BUILD_DIR="$SOURCE_DIR/build"

# Directory where package compilation output goes
# Each package gets it's own folder, and in that folder are the log files
LOG_DIR="/sources/log"

# Makeflags. Use this variable in your function with make and make install, so
# that way you can control all the variables from here.
MAKEFLAGS='-j2'

# Colors. Use at your own risk.
COLOR_NAME="\e[1;33m"
COLOR_EXTRACT="\e[1;35m"
COLOR_MAKE="\e[1;32m"
COLOR_CLEAN="\e[1;34m"
COLOR_ERROR="\e[1;31m"
COLOR_OFF="\e[m"

pretty_make()
{
	# Label the positional parameters
	PKG_NAME="$1"
	TARBALL="$SOURCE_DIR/$2"
	BUILD="$3"

	# Quit if no tarball
	[ ! -f "$TARBALL" ] && printf "No tarball $TARBALL\n" && exit
	# Quit if build directory exists already
	[ -d "$BUILD_DIR" ] && printf "Build dir $BUILD_DIR exists! Clean it first.\n" && exit

	# Date for the log file
	DATE="$(date +'%y%m%d-%H%M')"
	# Creating log folder if it doesn't exist
	mkdir -p "$LOG_DIR/$PKG_NAME"
	# Setting log file with package name and date
	LOG_FILE="$LOG_DIR/$PKG_NAME/$DATE.log"

	printf "${COLOR_EXTRACT}Extracting ${COLOR_NAME}${PKG_NAME}${COLOR_OFF}..."
	mkdir "$BUILD_DIR"
	if ! tar -xvf "$TARBALL" \
			-C "$BUILD_DIR" \
			--strip-components=1 \
			>> "$LOG_FILE" 2>&1; then
		printf "${COLOR_ERROR}Extraction failed! Could not extract $TARBALL${COLOR_OFF}\n"
		exit
	fi
	printf "${COLOR_EXTRACT}done!${COLOR_OFF}\n"

	# cd into build directory
	pushd "$BUILD_DIR" > /dev/null

	printf "${COLOR_MAKE}Configuring/making/installing ${COLOR_NAME}${PKG_NAME}${COLOR_OFF}..."
	if ! "$BUILD" >> "$LOG_FILE" 2>&1; then
		printf "${COLOR_ERROR}Failure! Check log file $LOG_FILE for details${COLOR_OFF}\n"
		printf "Not cleaning $BUILD_DIR.\n"
		exit
	fi
	printf "${COLOR_MAKE}done!${COLOR_OFF}\n"

	# Leave build directory
	popd > /dev/null

	printf "${COLOR_CLEAN}Cleaning ${COLOR_NAME}${PKG_NAME}${COLOR_OFF}..."
	rm -vr "$BUILD_DIR" >> "$LOG_FILE"
	printf "${COLOR_CLEAN}done!${COLOR_OFF}\n"
}
