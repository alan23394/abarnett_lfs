#!/tools/bin/bash

# This script will remove all the debugging symbols in binaries and libraries
# in the finished new system.
# Make sure you run it before cleanup! It needs /tools/bin/bash to work.

# First, we place the debugging symbols for the selected libraries in separate
# files. This debugging information is needed if running regression tests that
# use valgrind or gdb later in BLFS.

save_lib="ld-2.31.so libc-2.31.so libpthread-2.31.so libthread_db-1.0.so"

cd /lib

for LIB in $save_lib; do
    objcopy --only-keep-debug $LIB $LIB.dbg
    strip --strip-unneeded $LIB
    objcopy --add-gnu-debuglink=$LIB.dbg $LIB
done

save_usrlib="libquadmath.so.0.0.0 libstdc++.so.6.0.27
             libitm.so.1.0.0 libatomic.so.1.2.0"

cd /usr/lib

for LIB in $save_usrlib; do
    objcopy --only-keep-debug $LIB $LIB.dbg
    strip --strip-unneeded $LIB
    objcopy --add-gnu-debuglink=$LIB.dbg $LIB
done

unset LIB save_lib save_usrlib


# If you're doing this next part interactively, the book wants you to exec
# /tools/bin/bash so to not be using the new system's version while it gets
# stripped. I used /tools/bin/bash as the shebang for this script to accomplish
# this.


# Strip the binaries and libraries
# Lots of errors will pop up about unrecognized file formats. That's fine,
# those are scripts and not binaries.

/tools/bin/find /usr/lib -type f -name \*.a \
   -exec /tools/bin/strip --strip-debug {} ';'

/tools/bin/find /lib /usr/lib -type f \( -name \*.so* -a ! -name \*dbg \) \
   -exec /tools/bin/strip --strip-unneeded {} ';'

/tools/bin/find /{bin,sbin} /usr/{bin,sbin,libexec} -type f \
    -exec /tools/bin/strip --strip-all {} ';'
